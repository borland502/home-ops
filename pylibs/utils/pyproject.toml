[tool.coverage.run]
branch = true
source = [ "utils" ]

[tool.coverage.report]
exclude_lines = [ "if TYPE_CHECKING:" ]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/pylibs/utils/html' --cov-report xml:'../../coverage/pylibs/utils/coverage.xml' --html='../../reports/pylibs/utils/unittests/html/index.html' --junitxml='../../reports/pylibs/utils/unittests/junit.xml'"

[tool.poetry]
name = "utils"
version = "1.0.0"
description = "Automatically generated by Nx."
authors = [ ]
license = "Proprietary"
readme = "README.md"
group = { }

  [[tool.poetry.packages]]
  include = "utils"

  [tool.poetry.dependencies]
  python = ">=3.12, <4.0"
  zstandard = "^0.23.0"
  faker = "^33.0.0"
  plumbum = "^1.9.0"
  packaging = "^24.2"

[tool.ruff]
exclude = [
  ".svn",
  ".tox",
  ".eggs",
  ".git",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".venv",
  "tests",
  "__pypackages__",
  "__pycache__",
  "build",
  "dist"
]
indent-width = 4
line-length = 128
target-version = "py312"

  [tool.ruff.lint]
  ignore = [
  "PLR0912",
  "D104",
  "D203",
  "D213",
  "E501",
  "PGH003",
  "RET504",
  "D205",
  "ISC001",
  "E111",
  "N999",
  "PT009"
]
  select = [
  "A",
  "ASYNC",
  "B",
  "D",
  "DTZ",
  "E",
  "F",
  "FLY",
  "I",
  "ISC",
  "N",
  "NPY",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RUF",
  "RSE",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT"
]
  unfixable = [ "F401", "F841" ]

    [tool.ruff.lint.pydocstyle]
    convention = "google"

    [tool.ruff.lint.isort]
    section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "tests",
  "local-folder",
  "fixable",
  "unfixable"
]

      [tool.ruff.lint.isort.sections]
      fixable = [ "ALL" ]
      tests = [ "test" ]
      unfixable = [ ]

  [tool.ruff.format]
  line-ending = "lf"

[build-system]
requires = [ "poetry-core" ]
build-backend = "poetry.core.masonry.api"
