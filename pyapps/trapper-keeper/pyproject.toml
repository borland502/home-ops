[project.scripts]
tkeeper = "python -m trapper_keeper"

[tool.coverage.run]
branch = true
source = ["trapper_keeper"]

[tool.coverage.report]
exclude_lines = ["if TYPE_CHECKING:"]
show_missing = true

[tool.pytest.ini_options]
addopts = "--cov --cov-report html:'../../coverage/pyapps/trapper-keeper/html' --cov-report xml:'../../coverage/pyapps/trapper-keeper/coverage.xml' --html='../../reports/pyapps/trapper-keeper/unittests/html/index.html' --junitxml='../../reports/pyapps/trapper-keeper/unittests/junit.xml'"

[tool.poetry]
authors = []
description = "Automatically generated by Nx."
license = "MIT"
name = "trapper-keeper"
readme = "README.md"
version = "1.0.0"

[[tool.poetry.packages]]
include = "trapper_keeper"

[tool.poetry.dependencies]
python = "<4.0,>=3.10"
sqlalchemy = "^2.0.36"
pandas = "^2.2.3"
pykeepass = "^4.1.0.post1"
boltdb = "^0.0.2"
faker = "^30.8.1"
benedict = "^0.3.2"
sqlite-utils = "^3.37"
fire = "^0.7.0"
xkcdpass = "^1.19.9"
simple-toml-settings = "^0.8.0"

[tool.poetry.dependencies.resources]
path = "../../pylibs/resources"
develop = true

[tool.poetry.group.dev.dependencies]
autopep8 = "2.0.2"
pytest = "7.3.1"
pytest-cov = "4.1.0"
pytest-html = "3.2.0"
pytest-sugar = "0.9.7"
ruff = "0.1.5"

[tool.ruff]
indent-width = 2
line-length = 128
target-version = "py312"
exclude = [
  ".svn",
  ".tox",
  ".eggs",
  ".git",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".venv",
  "tests",
  "__pypackages__",
  "__pycache__",
  "build",
  "dist"
]

[tool.ruff.lint]
ignore = [
  "PLR0912",
  "D104",
  "D203",
  "D213",
  "E501",
  "PGH003",
  "RET504",
  "D205",
  "ISC001",
  "E111",
  "N999",
  "PT009"
]
select = [
  "A",
  "ASYNC",
  "B",
  "D",
  "DTZ",
  "E",
  "F",
  "FLY",
  "I",
  "ISC",
  "N",
  "NPY",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RUF",
  "RSE",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT"
]
unfixable = ["F401", "F841"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "tests",
  "local-folder",
  "fixable",
  "unfixable"
]

[tool.ruff.lint.isort.sections]
tests = ["test"]
fixable = ["ALL"]
unfixable = []

[tool.ruff.format]
line-ending = "lf"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]
