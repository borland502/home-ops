[tool.nx]
autoActivate = true

[tool.poetry]
authors = [ ]
description = ""
license = "Proprietary"
name = "@technohouser/home-ops"
package-mode = false
readme = "README.md"
version = "1.0.0"

  [tool.poetry.dependencies]
  python = ">=3.11,<4.0"
  sansldap = "^0.1.0"
  pyspnego = "^0.11.2"
  toml = "^0.10.2"
  ansible = "^11.1.0"
  ansible-runner = "^2.4.0"
  dnspython = "^2.7.0"
  cachier = "^3.1.2"
  parsing = "^2.0.4"
  vars = "^0.2"
  xdg-base-dirs = "^6.0.2"

    [tool.poetry.dependencies.homeops-utils]
    develop = true
    path = "pylibs/homeops-utils"

    [tool.poetry.dependencies.ansible-commands]
    develop = true
    path = "pyapps/ansible-commands"

    [tool.poetry.dependencies.trapper-keeper]
    develop = true
    path = "pyapps/trapper-keeper"

    [tool.poetry.dependencies.resources]
    develop = true
    path = "pylibs/resources"

    [tool.poetry.dependencies.homeops-inventory]
    path = "pylibs/homeops-inventory"
    develop = true

  [tool.poetry.dev-dependencies]
  faker = "^33.0.0"

[tool.poetry.group.dev.dependencies]
ruff = "0.1.5"
autopep8 = "2.0.2"
pytest = "7.3.1"
pytest-sugar = "0.9.7"
pytest-cov = "4.1.0"
pytest-html = "3.2.0"

[tool.ruff]
exclude = [
  ".svn",
  ".tox",
  ".eggs",
  ".git",
  ".ipynb_checkpoints",
  ".mypy_cache",
  ".pytest_cache",
  ".pytype",
  ".ruff_cache",
  ".venv",
  "tests",
  "__pypackages__",
  "__pycache__",
  "build",
  "dist"
]
indent-width = 4
line-length = 128
target-version = "py312"

  [tool.ruff.lint]
  ignore = [
  "PLR0912",
  "D104",
  "D203",
  "D213",
  "E501",
  "PGH003",
  "RET504",
  "D205",
  "ISC001",
  "E111",
  "N999",
  "PT009",
  "PT027",
  "I001"
]
  select = [
  "A",
  "ASYNC",
  "B",
  "D",
  "DTZ",
  "E",
  "F",
  "FLY",
  "I",
  "ISC",
  "LOG",
  "N",
  "NPY",
  "PERF",
  "PGH",
  "PIE",
  "PL",
  "PT",
  "Q",
  "RET",
  "RUF",
  "RSE",
  "SIM",
  "TID",
  "UP",
  "W",
  "YTT"
]
  unfixable = [ "F401", "F841" ]

    [tool.ruff.lint.pydocstyle]
    convention = "google"

    [tool.ruff.lint.isort]
    section-order = [
  "future",
  "standard-library",
  "third-party",
  "first-party",
  "tests",
  "local-folder"
]

      [tool.ruff.lint.isort.sections]
      fixable = [ "ALL" ]
      tests = [ "test" ]
      unfixable = [ ]

  [tool.ruff.format]
  line-ending = "lf"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [ "poetry-core" ]
