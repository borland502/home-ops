///usr/bin/env jbang --quiet "$0" "$@" ; exit $?
//JAVA 21+
//DEPS org.projectlombok:lombok:1.18.36
//DEPS ch.qos.logback:logback-classic:1.5.16
//DEPS com.electronwill.night-config:toml:3.8.1
//DEPS com.google.guava:guava:30.1-jre
//DEPS org.eclipse.jgit:org.eclipse.jgit:7.1.0.202411261347-r
//DEPS info.picocli:picocli:4.6.3
//SOURCES utils/Exec.java
//SOURCES utils/Assets.java
//SOURCES utils/DefaultPaths.java
//JAVAC_OPTIONS -proc:full

import static utils.Assets.Config.HOME_OPS;

import java.io.IOException;
import java.util.concurrent.Callable;
import com.electronwill.nightconfig.core.file.FileConfig;

import lombok.extern.slf4j.Slf4j;
import picocli.CommandLine;
import picocli.CommandLine.Command;

import utils.Exec;

/**
 *
 */
@Slf4j
@Command(name = "{basename}Runner", mixinStandardHelpOptions = true, version = "{basename}Runner 0.1", description = "{basename}Runner made with jbang")
class {basename}Runner implements Callable<Integer> {

  private static FileConfig config;

  static {
    try {
      config = HOME_OPS.getTomlConfig();
      config.load();
    } catch (IOException | InterruptedException e) {
      throw new RuntimeException(e);
    }
  }

  public static void main(String... args) {
    int exitCode = new CommandLine(new {basename}Runner()).execute(args);
    System.exit(exitCode);
  }

  @Override
  public Integer call() throws Exception {
    log.info("Hello, World!");
    log.info("red:" + config.get("colors.red").toString());
    config.entrySet().forEach(e -> log.info(e.getKey() + " : " + e.getValue()));

    return Exec.buildProcess("ls", "-lha").inheritIO().start().waitFor();
  }

}
