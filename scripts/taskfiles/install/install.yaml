# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

includes:

  validate:
    taskfile: "../validate.yaml"

env:
  NODE_CONFIG_DIR: "${XDG_CONFIG_HOME}/home-ops"

tasks:
  brew:
    desc: Ensure that brew is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: validate:internal:xdg
      - task: validate:internal:scripts
    status:
      - test -n ${HOMEBREW_PREFIX+x}
      - test -d ${HOMEBREW_PREFIX}
    cmds:
      - |
        # Confirm that brew is installed, and if not, install it
        if ! [[ $(command -v brew) ]]; then
          /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
        fi

  git:
    desc: Ensure that git is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: brew
    status:
      - test $(command -v git)
    cmds:
      - brew install git

  node:
    desc: Ensure that node is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: brew
    status:
      - test $(command -v node)
    cmds:
      # Duplicates the nvm install command, but brew will sneak it in sooner or later for other tools
      # and this suffices for the system node
      - brew install node

  python:
    desc: Ensure that python is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: brew
    status:
      - test $(command -v python)
    cmds:
      - brew install python

  pipx:
    desc: Ensure that pipx is installed
    run: once
    silent: false
    internal: false
    deps:
      - task: python
    status:
      - test $(command -v pipx)
    cmds:
      - brew install pipx

  pyenv:
    desc: Ensure that pyenv is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: brew
    status:
      - test $(command -v pyenv)
    cmds:
      - brew install pyenv

  nvm:
    desc: Ensure that nvm is installed
    run: once
    silent: true
    internal: true
    deps:
      - task: brew
    status:
      - test ${NVM_DIR+x}
    cmds:
      - brew install nvm

  keepassxc:
    desc: Ensure that keepassxc is installed
    run: once
    silent: false
    internal: false
    deps:
      - task: brew
    status:
      - test $(command -v keepassxc-cli)
    cmds:
      - cmd: brew install --cask keepassxc
        platforms:
          - "darwin"
      - cmd: source ../../shell/lib/install_doctor_functions.sh; ensurePackageInstalled
        platforms:
          - "linux"

  tools:
    desc: Install all the necessary tools
    run: once
    deps:
      - task: brew
      - task: git
      - task: node
      - task: python
      - task: pyenv
      - task: nvm
    cmds:
      - task: keepassxc


