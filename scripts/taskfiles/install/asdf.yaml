# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: 3

# https://sourcegraph.com/github.com/dkarter/dotfiles@9f0ebb0d05242cdcd1e0169c16403f4d0c8a4e5e/-/blob/taskfiles/asdf.yml

vars:
  ASDF_PLUGINS:
    - nodejs
    - python
    - age
    - age-plugin-yubikey
    - bat
    - caddy
    - chezmoi
    - dasel
    - direnv
    - eza
    - fd
    - fzf
    - git
    - has
    - java
    - graalvm
    - jbang
    - jq
    - github-cli
    - gum
    - pandoc
    - pipx
    - redis
    - restic
    - ripgrep
    - ruby
    - spring-boot
    - sqlite
    - starship
    - task
#    - unison
    - vim

  # some tools cannot be installed via asdf on ARM, but are still useful for
  # x86 machines and linux
  ARM_INCOMPATIBLE_PLUGINS:
    - neovim

  # remove incompatible plugins from full plugin list
  ARM_COMPATIBLE_PLUGINS:
    sh: echo {{range $plugin := .ASDF_PLUGINS}}{{if not (has $plugin $.ARM_INCOMPATIBLE_PLUGINS)}}{{$plugin}} {{end}}{{end}}

  NODE_LTS_PREFIX: "{{.NODE_VERSION}}"

  PYTHON_LTS_PREFIX: "{{.PYTHON_VERSION}}"

tasks:
  install:
    desc: Installs asdf itself, node, and python as fundamental tools
    silent: true
    interactive: true
    cmds:
      - cmd: |
          # https://notes.billmill.org/computer_usage/asdf/make_asdf_follow_the_XDG_spec.html
          git clone https://github.com/asdf-vm/asdf.git $XDG_DATA_HOME/asdf --branch v0.15.0
          if [[ -d $XDG_DATA_HOME/asdf ]]; then
              # I really wish asdf supported XDG_CONFIG:
              # https://github.com/asdf-vm/asdf/issues/687
              #
              # so let's set a bunch of variables that let us pretend it does
              export ASDF_DIR="$XDG_DATA_HOME/asdf"
              export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"

              . "$ASDF_DIR/asdf.sh"
              . "$ASDF_DIR/completions/asdf.bash"

              # https://asdf-vm.com/manage/configuration.html#asdfrc
              export ASDF_CONFIG_FILE="$XDG_CONFIG_HOME/asdfrc"

              # https://github.com/asdf-vm/asdf-nodejs#default-npm-packages
              export ASDF_NPM_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-npm-packages"

              # https://github.com/asdf-community/asdf-python#default-python-packages
              export ASDF_PYTHON_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-python-packages"

              export ASDF_JAVA_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-java-packages"
          fi
        platforms: [linux]
      - cmd: |
          brew install asdf
          if [[ -d ${HOME}/.asdf ]]; then
              . "$(brew --prefix asdf)/libexec/asdf.sh"
              . "${HOME}/.asdf/completions/_asdf"

              export ASDF_DIR="$XDG_DATA_HOME/asdf"
              export ASDF_DATA_DIR="$XDG_DATA_HOME/asdf"
              export ASDF_CONFIG_FILE="${XDG_CONFIG_HOME}/asdfrc"
              # https://github.com/asdf-vm/asdf-nodejs#default-npm-packages
              export ASDF_NPM_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-npm-packages"
              # https://github.com/asdf-community/asdf-python#default-python-packages
              export ASDF_PYTHON_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-python-packages"
              export ASDF_JAVA_DEFAULT_PACKAGES_FILE="$XDG_CONFIG_HOME/default-java-packages"
          fi
        platforms: [darwin]
      - cmd: asdf plugin add nodejs
      - cmd: asdf plugin add python
      - cmd: asdf install nodejs latest:{{.NODE_LTS_PREFIX}}
      - cmd: asdf install python latest:{{.PYTHON_LTS_PREFIX}}
      - cmd: asdf global nodejs latest:{{.NODE_LTS_PREFIX}}
      - cmd: asdf global python latest:{{.PYTHON_LTS_PREFIX}}
    dir: "${HOME}"

  plugins:install:
    desc: Installs all asdf plugins
    silent: true
    cmds:
      - platforms: [amd64]
        for:
          var: ASDF_PLUGINS
          as: PLUGIN
        cmd: asdf plugin add {{.PLUGIN}}

      - platforms: [arm64]
        for:
          var: ARM_COMPATIBLE_PLUGINS
          as: PLUGIN
          split: ' '
        cmd: asdf plugin add {{.PLUGIN}}

  plugins:update:
    desc: Updates all asdf plugins
    cmd: asdf plugin-update --all

  update:
    desc: Updates asdf itself
    cmds:
      - cmd: |
          {{ if eq .OS "linux" }}
            apt update && apt upgrade asdf -y
          {{ else if eq .OS "darwin" }}
            brew upgrade asdf
          {{ end }}
        platforms: [amd64]

      - platforms: [arm64]
        for:
          var: ARM_COMPATIBLE_PLUGINS
          as: PLUGIN
          split: ' '
        task: tool:install
        vars: { PLUGIN: '{{.PLUGIN}}' }

  sync:
    desc: Updates asdf plugins, asdf itself and installs packages for this project
    silent: true
    cmds:
      - task: plugins:install
      - task: plugins:update
      - task: update
      - asdf install

  tool:install:
    internal: true
    status:
      - asdf plugin list | grep -q "{{.PLUGIN}}" || exit 1
    requires:
      vars: [PLUGIN]
    silent: true
    cmd: |
      {{if eq .PLUGIN "nodejs" }}
        version='latest:{{.NODE_LTS_PREFIX}}'
      {{else if eq .PLUGIN "python"}}
        version='latest:{{.PYTHON_LTS_PREFIX}}'
      {{else}}
        version='latest'
      {{end}}
      echo
      asdf install {{.PLUGIN}} "$version"
      echo -n "Setting {{.PLUGIN}} $version as global.."
      asdf global {{.PLUGIN}} "$version"
      echo "DONE"

  tools:install:
    desc: Installs/updates all asdf based tools
    cmds:
      # install nodejs latest as many things depend on it in the following steps
      - platforms: [amd64]
        for:
          var: ASDF_PLUGINS
          as: PLUGIN
        cmd: task asdf:tool:install PLUGIN={{.PLUGIN}}

      - platforms: [arm64]
        for:
          var: ARM_COMPATIBLE_PLUGINS
          as: PLUGIN
          split: ' '
        task: tool:install
        vars: { PLUGIN: '{{.PLUGIN}}' }

