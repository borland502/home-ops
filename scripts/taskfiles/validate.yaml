# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

# Error codes
# 2 - XDG directories are not set or programs, configuration files are missing
# 4 - Permissions are not set correctly

tasks:
  debug:
    desc: Print the environment variables
    internal: false
    cmds:
      - printenv

  internal:xdg:
    desc: Ensure the XDG directories are set
    run: once
    internal: false
    silent: false
    cmds:
      - source ${HOME}/.env
      - |
        # Confirm that XDG_DATA_HOME is set and not empty
        if [ -z "${XDG_DATA_HOME+x}" ]; then
          echo "XDG_DATA_HOME is not set. Please set it to the directory where the data files will be stored."
          exit 2
        fi
      - |
        # Confirm that XDG_CONFIG_HOME is set and not empty
        if [ -z "${XDG_CONFIG_HOME+x}" ]; then
          echo "XDG_CONFIG_HOME is not set. Please set it to the directory where the configuration files will be stored."
          exit 2
        fi
      - |
        # Confirm that XDG_BIN_HOME is set and not empty
        if [ -z "${XDG_BIN_HOME+x}" ]; then
          echo "XDG_BIN_HOME is not set. Please set it to the directory where the scripts will be deployed."
          exit 2
        fi
      - |
        # Confirm that XDG_CACHE_HOME is set and not empty
        if [ -z "${XDG_CACHE_HOME+x}" ]; then
          echo "XDG_CACHE_HOME is not set. Please set it to the directory where the cache files will be stored."
          exit 2
        fi
      - |
        # Confirm that XDG_RUNTIME_DIR is set and not empty
        if [ -z "${XDG_RUNTIME_DIR+x}" ]; then
          echo "XDG_RUNTIME_DIR is not set. Please set it to the directory where the runtime files will be stored."
          exit 2
        fi
      - |
        # Confirm that XDG_STATE_HOME is set and not empty
        if [ -z "${XDG_STATE_HOME+x}" ]; then
          echo "XDG_STATE_HOME is not set. Please set it to the directory where the state files will be stored."
          exit 2
        fi
      - |
        # Confirm that XDG_CONFIG_DIRS is set and not empty
        if [ -z "${XDG_CONFIG_DIRS+x}" ]; then
          echo "XDG_CONFIG_DIRS is not set. Please set it to the directories where the configuration files are stored."
          exit 2
        fi
      - |
        # Confirm that XDG_DATA_DIRS is set and not empty
        if [ -z "${XDG_DATA_DIRS+x}" ]; then
          echo "XDG_DATA_DIRS is not set. Please set it to the directories where the data files are stored."
          exit 2
        fi

  internal:scripts:
    desc: Ensure the scripts bin & lib directories are set
    run: once
    internal: false
    silent: false
    cmds:
      - |
        # Confirm that the scripts directory is set and not empty
        if [ -z "${XDG_BIN_HOME+x}" ]; then
          echo "SCRIPTS_DIR is not set. Please set it to the directory where the scripts are stored."
          exit 2
        fi
      - |
        if [ -z "${XDG_LIB_HOME+x}" ]; then
          echo "SCRIPTS_LIB_DIR is not set. Please set it to the directory where the scripts libraries are stored."
          exit 2
        fi

#  internal:permissions:
#    desc: Ensure the correct permissions are set for sensitive files
#    summary: |
#      This task ensures that the permissions are set correctly for the sensitive files.
#
#      - The git credentials file should have 600 permissions
#      - The ssh private key should have 600 permissions
#      - The keepassxc database should have 600 permissions
#    run: once
#    internal: false
#    silent: false
#    cmds:
#      - |
#        # Confirm that the permissions are set correctly for the sensitive files
#        if [ "$(stat -c %a "${XDG_DATA_HOME}/keepassxc/keepassxc.kdbx")" -ne 600 ]; then
#          echo "The permissions for the keepassxc database are not set correctly. Please set them to 600."
#          exit 4
#        fi
